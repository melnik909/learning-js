
String.fromCharCode()
возвращает строку, созданную из указанной последовательности значений единиц кода UTF-16.
String.fromCharCode(65, 66, 67);  // "ABC"

====

str.charAt(index)
Метод charAt() возвращает указанный символ из строки.

Символы в строке идут слева направо. Индекс первого символа равен 0, а
последнего символа в строке stringName равен stringName.length - 1.
Если предоставленный вами параметр index выходит за пределы этого диапазона,
JavaScript вернёт пустую строку.

====

str.charCodeAt(index)
Метод charCodeAt() возвращает числовое значение Юникода для символа по
указанному индексу (за исключением кодовых точек Юникода, больших 0x10000).

====

str.concat(string2, string3[, ..., stringN])
Метод concat() объединяет текст из двух или более строк и возвращает новую строку.

var hello = 'Привет, ';
console.log(hello.concat('Кевин', ', удачного дня.'));

====

str.includes(searchString[, position])
Метод includes() проверяет, содержит ли строка заданную подстроку, и
возвращает, соответственно true или false.

var str = 'Быть или не быть вот в чём вопрос.';

console.log(str.includes('вопрос'));    // true

Метод includes() является регистрозависимым. Например, следующее выражение вернёт false:

'Синий кит'.includes('синий'); // вернёт false

====

str.indexOf(searchValue, [fromIndex])
Метод indexOf() возвращает индекс первого вхождения указанного значения в строковый
объект String, на котором он был вызван, начиная с индекса fromIndex. Возвращает -1,
если значение не найдено.

'Синий кит'.indexOf('Голубой');  // вернёт -1

Метод indexOf() является регистрозависимым. Например, следующее выражение вернёт -1:

'Синий кит'.indexOf('синий'); // вернёт -1

====

str.lastIndexOf(searchValue[, fromIndex])
Метод lastIndexOf() возвращает индекс последнего вхождения указанного значения в
строковый объект String, на котором он был вызван, или -1, если ничего не было
найдено. Поиск по строке ведётся от конца к началу, начиная с индекса fromIndex.

'канал'.lastIndexOf('а');     // вернёт 3

Метод lastIndexOf() является регистрозависимым. Например, следующее выражение вернёт -1:

'Cиний кит, касатка'.lastIndexOf('синий'); // вернёт -1

====

str.match(regexp)
Метод match() возвращает получившиеся совпадения при сопоставлении строки с регулярным выражением.

Объект Array, содержащий результаты сопоставления, или null, если ничего не было сопоставлено.

====

str.replace(regexp|substr, newSubStr|function[, flags])
Метод replace() возвращает новую строку с некоторыми или всеми сопоставлениями с шаблоном,
заменёнными на заменитель. Шаблон может быть строкой или регулярным выражением, а заменитель
может быть строкой или функцией, вызываемой при каждом сопоставлении.

var re = /яблоки/gi;
var str = 'Яблоки круглые и яблоки сочные.';
var newstr = str.replace(re, 'апельсины');
console.log(newstr); // апельсины круглые и апельсины сочные.

====

str.search([regexp])
Метод search() выполняет поиск сопоставления между регулярным выражением и этим объектом String.


====

str.slice(beginSlice[, endSlice])
Метод slice() извлекает часть строки и возвращает новую строку.

var str1 = 'Приближается утро.';
var str2 = str1.slice(4, -2);

console.log(str2); // ВЫВОД: лижается утр

====

str.split([separator[, limit]])
Метод split() разбивает объект String на массив строк путём разделения строки указанной подстрокой.

====

str.startsWith(searchString[, position])
